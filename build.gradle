/*
 * Copyright (C) 2019 Silverbackhq <https://github.com/silverbackhq>
*
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
* in compliance with the License. You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed under the License
* is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
* or implied. See the License for the specific language governing permissions and limitations under
* the License.
*/

plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.24.3'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

spotless {
    java {
        licenseHeaderFile '.license'
        importOrder 'java'
        googleJavaFormat('1.1').aosp()
        target 'src/**/*.java'
    }
}

group = 'com.clivern'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    vertxVersion = '3.8.3'
    junitJupiterEngineVersion = '5.4.0'
}

application {
    mainClassName = 'io.vertx.core.Launcher'
}

sourceCompatibility = '1.8'

def mainVerticleName = 'com.clivern.reindeer.App'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation 'io.github.cdimascio:java-dotenv:5.1.3'
    implementation 'org.flywaydb:flyway-core:6.0.8'
    implementation 'com.h2database:h2:1.4.197'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
    testImplementation 'junit:junit:4.12'
}


shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
